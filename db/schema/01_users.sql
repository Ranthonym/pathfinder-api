-- Drop and recreate tables
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS results CASCADE;
DROP TABLE IF EXISTS requirements CASCADE;
DROP TABLE IF EXISTS programs CASCADE;
DROP TABLE IF EXISTS careers CASCADE;
DROP TABLE IF EXISTS attempts CASCADE;
DROP TABLE IF EXISTS favourites CASCADE;
DROP TABLE IF EXISTS mentors CASCADE;
DROP TABLE IF EXISTS conversations CASCADE;
DROP TABLE IF EXISTS messages CASCADE;
DROP TABLE IF EXISTS questions CASCADE;
DROP TABLE IF EXISTS answers CASCADE;


CREATE TABLE users (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  is_mentor BOOLEAN DEFAULT 'f'
);

CREATE TABLE results (
  id SERIAL PRIMARY KEY NOT NULL,
  title VARCHAR(255) NOT NULL,
  description VARCHAR(255) NOT NULL
);

CREATE TABLE requirements (
  id SERIAL PRIMARY KEY NOT NULL,
  title VARCHAR(255) NOT NULL,
  education VARCHAR(900) NOT NULL,
  years INTEGER NOT NULL
);

-- add description and courses 
CREATE TABLE programs (
  id SERIAL PRIMARY KEY NOT NULL,
  requirement_id INTEGER REFERENCES requirements(id) ON DELETE CASCADE,
  title VARCHAR(255) NOT NULL,
<<<<<<< HEAD
  description VARCHAR(600) NOT NULL,
=======
  description VARCHAR(255) NOT NULL,
>>>>>>> b1773cc6f1e1b995f21ea85bf0443ada4e3aaa9a
  required_courses text ARRAY NOT NULL,
  grade_average VARCHAR(255) NOT NULL,
  courses VARCHAR(255) NOT NULL
);

CREATE TABLE careers (
  id SERIAL PRIMARY KEY NOT NULL,
  result_id INTEGER REFERENCES results(id) ON DELETE CASCADE,
  requirement_id INTEGER REFERENCES requirements(id) ON DELETE CASCADE,
  title VARCHAR(255) NOT NULL,
  description VARCHAR(900) NOT NULL,
  salary INTEGER NOT NULL,
  outlook VARCHAR(255) NOT NULL
);

CREATE TABLE attempts (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  result_id INTEGER REFERENCES results(id) ON DELETE CASCADE
);

CREATE TABLE favourites (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  career_id INTEGER REFERENCES careers(id) ON DELETE CASCADE
);


CREATE TABLE mentors (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  career_id INTEGER REFERENCES careers(id) ON DELETE CASCADE
);

CREATE TABLE conversations (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  mentor_id INTEGER REFERENCES mentors(id) ON DELETE CASCADE
);

CREATE TABLE messages (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  conversation_id INTEGER REFERENCES conversations(id) ON DELETE CASCADE,
  message VARCHAR(255) NOT NULL,
  timestamp TIME 
);

CREATE TABLE questions (
  id SERIAL PRIMARY KEY NOT NULL,
  content VARCHAR(255) NOT NULL
);

CREATE TABLE answers (
  id SERIAL PRIMARY KEY NOT NULL,
  question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,
  content VARCHAR(255) NOT NULL
);